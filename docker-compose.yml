version: "3.9"

services:
  db:
    image: postgres:15
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: database
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: 1234
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./logs/postgres:/var/log/postgresql # 로그 마운트
    networks:
      - backend
      - monitoring-network
      - logging-network
    command:
      - postgres
      - "-c"
      - "logging_collector=on"
      - "-c"
      - "log_directory=/var/log/postgresql"
      - "-c"
      - "log_filename=postgresql.log"
      - "-c"
      - "log_statement=all"
      - "-c"
      - "log_min_duration_statement=1000"
      - "-c"
      - "log_connections=on"
      - "-c"
      - "log_disconnections=on"

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    command:
      [
        "redis-server",
        "--slowlog-log-slower-than",
        "1000",
        "--slowlog-max-len",
        "256",
        "--logfile",
        "/var/log/redis/redis-server.log",
      ]
    volumes:
      - redis_data:/data
      - ./logs/redis:/var/log/redis # 로그 마운트
    networks:
      - backend
      - monitoring-network
      - logging-network

  redis-cli:
    image: redis:7
    container_name: redis-cli
    depends_on:
      - redis
    networks:
      - backend
      - monitoring-network
    command: ["tail", "-f", "/dev/null"] # 컨테이너를 계속 실행 상태로 유지
    volumes:
      - ./redis-scripts:/scripts # Redis 스크립트 디렉토리 마운트

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend
    depends_on:
      - db
      - redis
    ports:
      - "8080:8080"
    networks:
      - backend
      - monitoring-network
      - logging-network
    restart: unless-stopped
    env_file:
      - docker.env
    environment:
      - SPRING_PROFILES_ACTIVE=prod

volumes:
  postgres_data:
  redis_data:

networks:
  backend:
    name: backend
  monitoring-network:
    name: monitoring-network
    external: true # 미리 생성된 외부 네트워크 사용
  logging-network:
    name: logging-network
    external: true # 미리 생성된 외부 네트워크 사용
